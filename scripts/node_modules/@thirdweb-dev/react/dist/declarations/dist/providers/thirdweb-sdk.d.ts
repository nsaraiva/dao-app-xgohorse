import { RequiredParam } from "../types/types";
import { ChainIdOrName, IStorage, SDKOptions, SUPPORTED_CHAIN_ID, ThirdwebSDK } from "@thirdweb-dev/sdk/dist/browser";
import { Signer } from "ethers";
import React from "react";
import { QueryClient } from "react-query";
interface AppMetadata {
    name: string;
    logoUrl?: string;
    description?: string;
}
declare type ChainIDToRpcUrlMap = Record<SUPPORTED_CHAIN_ID | number, string>;
interface ThirdwebConfigContext {
    chainIdToRPCUrlMap: ChainIDToRpcUrlMap;
    appMetadata: AppMetadata;
}
declare const ThirdwebConfigContext: React.Context<ThirdwebConfigContext>;
export interface ThirdwebSDKProviderProps {
    readonly chainId: RequiredParam<ChainIdOrName>;
    readonly chainIdToRPCUrlMap?: Partial<ChainIDToRpcUrlMap>;
    readonly options?: SDKOptions;
    readonly storageInterface?: IStorage;
    readonly signer?: Signer;
    readonly appMetadata?: AppMetadata;
    queryClient?: QueryClient;
}
export declare const ThirdwebSDKProvider: React.FC<React.PropsWithChildren<ThirdwebSDKProviderProps>>;
export declare function useThirdwebConfig(): ThirdwebConfigContext;
/**
 * Use this to access the ThirdwebSDK instance directly.
 *
 * @returns an instance of the ThirdwebSDK or undefined if no chain is defined
 * @public
 */
export declare function useSDK(): ThirdwebSDK | undefined;
export {};
